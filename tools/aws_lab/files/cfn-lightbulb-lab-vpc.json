{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "VPC: public and private subnets in two availability zones",
  "Parameters": {
    "WorkShop": {
      "Description": "Name of the WorkShop for which the VPC is being used",
      "Type": "String",
      "Default": "Ansible-Lightbulb-Workshop",
      "ConstraintDescription": "Malformed input-Parameter WorkShop must match pattern ^[A-Za-z0-9-]*$",
      "AllowedPattern": "^[A-Za-z0-9-]*$"
    }

  },
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": {
          "Fn::Sub": "10.0.0.0/16"
        },
        "EnableDnsSupport": true,
        "EnableDnsHostnames": true,
        "InstanceTenancy": "default",
        "Tags": [{
          "Key": "Name",
          "Value": {
            "Ref": "WorkShop"
          }
        }]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [{
          "Key": "Name",
          "Value": {
            "Ref": "WorkShop"
          }
        }]
      }
    },
    "VPCGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "SubnetPublic": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": {
          "Fn::Sub": "10.0.0.0/24"
        },
        "MapPublicIpOnLaunch": true,
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [{
          "Key": "Name",
          "Value": {
            "Ref": "WorkShop"
          }
        }]
      }
    },
    "RouteTablePublic": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [{
          "Key": "Name",
          "Value": {
            "Ref": "WorkShop"
          }
        }]
      }
    },
    "RouteTableAssociationAPublic": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "SubnetPublic"
        },
        "RouteTableId": {
          "Ref": "RouteTablePublic"
        }
      }
    },
    "RouteTablePublicInternetRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "VPCGatewayAttachment",
      "Properties": {
        "RouteTableId": {
          "Ref": "RouteTablePublic"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "NetworkAclPublic": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [{
          "Key": "Name",
          "Value": {
            "Ref": "WorkShop"
          }
        }]
      }
    },
    "SubnetNetworkAclAssociationAPublic": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "SubnetPublic"
        },
        "NetworkAclId": {
          "Ref": "NetworkAclPublic"
        }
      }
    },
    "NetworkAclEntryInPublicAllowAll": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "NetworkAclPublic"
        },
        "RuleNumber": 99,
        "Protocol": -1,
        "RuleAction": "allow",
        "Egress": false,
        "CidrBlock": "0.0.0.0/0"
      }
    },
    "NetworkAclEntryOutPublicAllowAll": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "NetworkAclPublic"
        },
        "RuleNumber": 99,
        "Protocol": -1,
        "RuleAction": "allow",
        "Egress": true,
        "CidrBlock": "0.0.0.0/0"
      }
    }
  },
  "Outputs": {
    "VPC": {
      "Description": "VPC.",
      "Value": {
        "Ref": "VPC"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-VPC"
        }
      }
    },
    "SubnetPublic": {
      "Description": "VPC Subnet",
      "Value": {
        "Ref": "SubnetPublic"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-SubnetPublic"
        }
      }
    }
  }
}
